@page "/"
@page "/search/{searchText}"
@page "/searchSuggestions/{searchText}"
@page "/{categoryUrl}"
@implements IAsyncDisposable
@inject IJSRuntime JS
@inject IProductService ProductService

<ProductList />

@code {
    [Parameter]  //when navigate to another url then OnParameterSetAsync will run
    public string CategoryUrl { get; set; } = null;

    [Parameter]  //when navigate to another url then OnParameterSetAsync will run
    public string SearchText { get; set; } = null;

    protected override async Task OnParametersSetAsync()
    {
        if(SearchText != null)
        {
            await ProductService.SearchProducts(SearchText);
            return;
        }

        await ProductService.GetProducts(CategoryUrl);
    }

    private IJSObjectReference? module;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await JS.InvokeAsync<IJSObjectReference>("import",
                "./Pages/Index.razor.js");
            // await module.InvokeVoidAsync("showPrompt");
            // await module.InvokeVoidAsync("AddViewer", "foo");
        }
    }

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (module is not null)
        {
            await module.DisposeAsync();
        }
    }
}